## updated from Snakemake's test suite
##
## https://raw.githubusercontent.com/snakemake/snakemake/main/.github/workflows/main.yml
## Derivative of (c) 2012-2022 Johannes KÃ¶ster johannes.koester@uni-due.com
## From Koester's license above:
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
# PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
# FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

name: software

on:
  push:
    branches:
      - sw_imallona
  pull_request:

concurrency:
  # Cancel concurrent flows on PRs
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  testing:
    strategy:
      matrix:
        test_group: [1, 2]
        py_ver: ["3.12"]
    runs-on: ubuntu-latest
    ## runs-on: ubuntu:24.10
    ## needs: formatting
    ## env:
    ##   AWS_AVAILABLE: "${{ secrets.AWS_ACCESS_KEY_ID }}"
    ##   GCP_AVAILABLE: "${{ secrets.GCP_SA_KEY }}"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Modify python version in test env
        shell: bash -el {0}
        run: |
          cp test-environment.yml test-environment-${{ matrix.py_ver }}.yml
          sed -E -i 's/- python.+/- python =${{ matrix.py_ver }}/' test-environment-${{ matrix.py_ver }}.yml

      - name: Setup omnibenchmark environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: test-environment-${{ matrix.py_ver }}.yml
          environment-name: omb
          cache-environment: true

      - name: Install omnibenchmark from source
        shell: bash -el {0}
        run: |
          conda config --set channel_priority strict

          pip install -e .

      # - name: Configure fast APT mirror
      #   uses: vegardit/fast-apt-mirror.sh@1.0.0

      - name: Setup apt dependencies
        run: |
          sudo add-apt-repository -y ppa:apptainer/ppa
          sudo apt-get update
          sudo apt install -y stress git wget openmpi-bin libopenmpi-dev apptainer

      - name: Test local
        env:
          CI: true
          # ZENODO_SANDBOX_PAT: "${{ secrets.ZENODO_SANDBOX_PAT }}"
        shell: bash -el {0}
        run: |
          pytest -v -x --show-capture=stderr \
            --splits 2 --group ${{ matrix.test_group }} --splitting-algorithm=least_duration \
            tests/software/tests.py
            
      ## - name: Run tests/test_report/Snakefile to generate report
      ##   shell: bash -el {0}
      ##   run: |
      ##     cd tests/test_report
      ##     snakemake --use-conda --cores 1 --report report.zip

      ## - name: List directory structure
      ##   run: |
      ##     ls -R

      ## - name: Upload report
      ##   if: ${{ matrix.test_group == 1 }}
      ##   uses: actions/upload-artifact@v4
      ##   with:
      ##     name: report-${{ matrix.py_ver }}.zip
      ##     path: tests/test_report/report.zip


  build-container-image:
    runs-on: ubuntu-latest
    ## runs-on: ubuntu:24.10
    needs: testing
    steps:
      - uses: actions/checkout@v4

      - name: Build container image
        run: docker build .